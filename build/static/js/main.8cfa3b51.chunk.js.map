{"version":3,"sources":["Hashtag.js","HashtagContainer.js","Graph.js","Tweet.js","TweetContainer.js","Login.js","Console.js","App.js","serviceWorker.js","index.js","img/cdllogo2.png"],"names":["Hashtag","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","generate_color","number","main","selected","on_click","state","setState","curr_color","color","toggleSelect","hashtag","class_name","react_default","a","createElement","className","onClick","style","background","Component","HashtagContainer","hashtags","selectedHashtags","callbackFromParent","reduce","objectSpread","defineProperty","_this2","map","ele","i","src_Hashtag","Graph","createDynamicChart","bind","assertThisInitialized","referMe","React","createRef","console","log","d3","remove","myData","freq","length","node","width","document","getElementsByClassName","offsetWidth","height","margin","getElementById","string","svg","attr","append","initialState","key","parseDate","x","range","y","xAxis","tickSize","yAxis","line","d","date","temperature","data","domain","filter","forEach","cities","name","slice","values","c","v","legend","selectAll","enter","text","city","datum","value","mouseG","lines","mousePerLine","on","mouse","pos","xDate","invert","beginning","bisect","right","end","getTotalLength","target","Math","floor","getPointAtLength","select","toFixed","id","ref","Tweet","image","src","alt","author","TweetContainer","tweets","src_Tweet","Login","login","event","preventDefault","username","password","CryptoJs","SHA256","toString","socket","emit","res","response","JSON","parse","hasOwnProperty","error","authorized","validated","authorize","onSubmit","type","placeholder","autoComplete","Console","removeFromTracking","toRemove","trackHashtags","removeFromDisplay","displayHashtags","addToTracking","push","addToDisplay","toggleTracking","editingTracking","toggleDisplay","editingDisplay","addSubmitTracking","reset","addSubmitDisplay","includes","displayError","confirmDisplay","confirmTracking","displaying","tracking","close","host","URL","window","location","href","port","io","connect","App","updateFeed","tweetData","formatTweets","updateGraph","freqData","dataString","formatData","toggleLogin","user","toggleConsole","myCallback","row1","intervalSet","Set","count","t","dateString","parseDateString","has","index","indexOf","add","rowToAdd","dataToString","tweetDate","dateObj","Date","year","getFullYear","month","getMonth","getDate","hour","getHours","minutes","getMinutes","roundMinutes","join","tweetList","tweetObj","picture","contents","offsetW","isLoading","setTimeout","received","tracked","displayed","react_loading_default","src_Console","src_Login","src_Graph","src_HashtagContainer","logo","src_TweetContainer","Boolean","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.8cfa3b51.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './css/Hashtag.css';\n\n/**\n * Models a hashtag element for the bottom hashtag bar.\n * Takes one prop\n * @author Grace\n */\nclass Hashtag extends Component {\n\n    constructor(props) {\n        super(props);\n        const color = this.generate_color();\n        this.state = {\n            selected: false,\n            color: color,\n            curr_color: color.main\n        }\n    }\n\n    /**\n     * Generates a random pair of main and selected colors from a fixed list.\n     * @returns {{main, selected}|*}\n     */\n    generate_color = () => {\n        if (this.props.number === 0) {\n            return {main: \"#808080\", selected: \"#2E76AE\"};\n        }\n        else if (this.props.number === 1) {\n            return {main: \"#808080\", selected: \"#FA802D\"};\n        }\n        else if (this.props.number === 2) {\n            return {main: \"#808080\", selected: \"#3C9E2C\"};\n        }\n        else if (this.props.number === 3) {\n            return {main: \"#808080\", selected: \"#D52B1E\"};\n        }\n        else {\n            return {main: \"#808080\", selected: \"black\"};\n        }\n    };\n\n\n    /**\n     * Records whether the hashtag is selected or not. Changes the current color based on whether or not the hashtag is\n     * selected\n     */\n    on_click = () => {\n        if (!this.state.selected)  {\n            this.setState({selected: true, curr_color: this.state.color.selected});\n            this.props.toggleSelect(this.props.hashtag, true);\n\n        } else {\n            this.setState({selected: false, curr_color: this.state.color.main});\n            this.props.toggleSelect(this.props.hashtag, false);\n\n        }\n\n\n    };\n\n\n    render() {\n        //determines the correct class name based on whether or not the hashtag is currently selected\n        let class_name = this.state.selected ? \"selected\": \"unselected\";\n        class_name = \"Hashtag \" + class_name;\n        return (\n            <div className={class_name} onClick={this.on_click} style={{background: this.state.curr_color}}>\n                #{this.props.hashtag}\n            </div>\n        );\n    }\n}\n\nexport default Hashtag;\n","import React, { Component } from 'react';\nimport './css/HashtagContainer.css';\nimport Hashtag from \"./Hashtag\";\n\n/**\n * Wrapper for the hashtags\n * Expects one prop: hashtags, which is a list of hashtags\n * @author Grace\n */\nclass HashtagContainer extends Component {\n\tconstructor(props) {\n        super(props);\n        this.state = {\n            selectedHashtags: this.props.hashtags.reduce(\n\t\t    (hashtags, selected) => ({\n\t\t      ...hashtags,\n\t\t      [selected]: false\n\t\t    }),\n\t\t    {}\n\t\t  )\n        }\n    }\n\n    toggleSelect = (hashtag, selected) => {\n\t  let hashtags = this.state.selectedHashtags;\n\t  hashtags[hashtag] = selected;\n\t  this.setState(\n          {selectedHashtags: hashtags},\n          this.props.callbackFromParent(hashtags)\n          );\n\t  //console.log(\"HASHTAGS: \"+Object.keys(hashtags));\n\t};\n\n    render() {\n        return (\n            <div className=\"hashtags\">\n                {this.props.hashtags.map((ele, i) => {\n                    return <Hashtag hashtag={ele} number={i} toggleSelect={this.toggleSelect}/>;\n                })}\n            </div>\n        );\n    }\n}\n\nexport default HashtagContainer;\n","import React, { Component } from 'react';\nimport './css/Graph.css';\nimport * as d3 from \"d3\";\nimport ReactDOM from 'react-dom';\nimport { SSL_OP_NO_SESSION_RESUMPTION_ON_RENEGOTIATION } from 'constants';\n\n/**\n * Graph component. Does nothing right now.\n * @author Grace\n */\n\nclass Graph extends Component {\n    constructor(props) {\n        super(props)\n           this.createDynamicChart = this.createDynamicChart.bind(this);\n           this.referMe = React.createRef();\n    }\n\n    componentDidMount() {\n        this.createDynamicChart();\n        //this.node.width = document.getElementsByClassName('wrapper-left')[0].offsetWidth;\n        //console.log(\"componentDidMount LOG:\"+ this.node);\n    }\n\n    componentDidUpdate() {\n        this.createDynamicChart();\n        //console.log(\"FREQ from componentDidMount: \"+this.props.freq);\n    }\n\n    createDynamicChart() {\n      console.log(\"this.props.hashtags: \"+this.props.hashtags); \n      console.log(\"hashtag[#cats] :\"+this.props.hashtags[\"cats\"]);\n      \n      d3.selectAll(\"g\").remove();\n      var myData = this.props.freq;\n      if (myData.length == 0) {\n        return;\n      }\n\n        const node = this.node;\n\n\n          var width = 1 * (document.getElementsByClassName('wrapper-left')[0].offsetWidth),\n          //width = this.props.width - margin.left - margin.right,\n          //width = this.referMe.offsetWidth,\n          //width = ReactDOM.findDOMNode(this).offsetWidth - margin.left - margin.right,\n          //width = this.props.svg.width - margin.left - margin.right,\n          //width = d3.select('.svg').node().element.getBoundingClientRect().width - margin.left - margin.right,\n          //height = document.getElementsByClassName('wrapper-left')[0].offsetHeight - 100 - document.getElementsByClassName('hashtags')[0].offsetHeight;\n          height = width * 0.73,\n          margin = {\n            top: width/63, //~13\n            right: 0,\n            bottom: 0,\n            left: width/27 //~30\n          };\n          document.getElementById('svg').style.height = height * 1;\n          document.getElementById('svg').style.width = width * 1;\n\n           {/*var svg = d3.select(\"body\").append(\"svg\")*/}\n          var string = \"0 0 \"+width*1.125+\" \"+height*1.04\n          var svg = d3.select(node)\n          //.attr(\"width\", width + margin.left + margin.right)\n          //.attr(\"height\", height + margin.top + margin.bottom)\n          .attr(\"preserveAspectRatio\", \"xMinYMin meet\")\n          .attr(\"viewBox\", string)\n          .append(\"g\")\n          .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n          let initialState = false;\n          for (var key in this.props.hashtags) {\n            if (this.props.hashtags[key]) {\n              initialState = true;\n            }\n          }\n          if (!initialState) {\n            svg.append(\"text\")\n            .text(\"Please select hashtags below to track their frequency.\")\n            .attr(\"y\", height/2)\n            .attr(\"x\", height/3)\n            .attr(\"font-size\", height/30 + \"px\")\n            return;\n          }\n\n        var parseDate = d3.timeParse(\"%Y%m%d%H%M\");\n\n        var x = d3.scaleTime()\n          .range([0, width]);\n\n        var y = d3.scaleLinear()\n          .range([height, 0]);\n\n        var color = d3.scaleOrdinal(d3.schemeCategory10);\n\n        var xAxis = d3.axisBottom(x)\n          .tickSize(height/120)\n\n        //   var xAxis = d3.svg.axis()\n        //     .scale(x)\n        //     .orient(\"bottom\");\n\n        var yAxis = d3.axisLeft(y)\n          .tickSize(height/120);\n\n\n        //     var yAxis = d3.svg.axis()\n        //       .scale(y)\n        //       .orient(\"left\");\n\n        var line = d3.line()\n          //.curve(d3.curveBasis) -- interpolates data\n          .x(function(d) {\n            return x(d.date);\n          })\n          .y(function(d) {\n            return y(d.temperature);\n          });\n\n       // MOVE THE SVG CHUNK RIGHT HERE // \n\n        var data = d3.tsvParse(myData);\n\n        color.domain(d3.keys(data[0]).filter(function(key) {\n          return key !== \"date\";\n        }));\n\n        data.forEach(function(d) {\n          d.date = parseDate(d.date);\n          //d.date = d3.timeFormat(\"%Y%m%d%H%M\")(d.date);\n        });\n\n        let hashtags = this.props.hashtags;\n        var cities = color.domain().map(function(name) {\n          console.log(\"name in line 263 :\"+name);\n          if (!hashtags[name.slice(1)]) {\n            return {\n              name: \"\",\n              values: data.map(function(d) {\n                return {\n                  date: \"\",\n                  temperature: null\n                };\n              })\n            };\n          }\n          return {\n            name: name,\n            values: data.map(function(d) {\n              return {\n                date: d.date,\n                temperature: +d[name]\n              };\n            })\n          };\n        });\n\n        x.domain(d3.extent(data, function(d) {\n          return d.date;\n        }));\n\n        y.domain([\n          d3.min(cities, function(c) {\n            return d3.min(c.values, function(v) {\n              return v.temperature;\n            });\n          }),\n          d3.max(cities, function(c) {\n            return d3.max(c.values, function(v) {\n              return v.temperature;\n            });\n          })\n        ]);\n\n        var legend = svg.selectAll('g')\n          .data(cities)\n          .enter()\n          .append('g')\n          .attr('class', 'legend');\n\n        legend.append('rect')\n          .attr('x', width*0.98)\n          .attr('y', function(d, i) {\n            return (i + 1) * height/20;\n          })\n          .attr('width', height/68)\n          .attr('height', height/68)\n          .style('fill', function(d) {\n            if (d.name == \"\") \n              return \"gray\";\n            return color(d.name);\n          });\n\n        legend.append('text')\n          .attr('x', width*1)\n          .attr('y', function(d, i) {\n            return (i + 1.3) * height/20;\n          })\n          .attr(\"font-size\", height/40 + \"px\")\n          .text(function(d) {\n            return d.name;\n          });\n\n        svg.append(\"g\")\n          .attr(\"class\", \"x axis\")\n          //.attr(\"transform\", \"translate(0,\" + height - 500 + \")\")\n          .call(xAxis)\n          .attr(\"font-size\", height/50 + \"px\")\n          .style(\"stroke-width\", height/430);\n\n        svg.append(\"g\")\n          .attr(\"class\", \"y axis\")\n          .call(yAxis)\n          .attr(\"font-size\", height/50 + \"px\")\n          .style(\"stroke-width\", height/430)\n          .append(\"text\")\n          .attr(\"font-size\", height/50 + \"px\")\n          .attr(\"transform\", \"translate(\"+ height/30 +\", 0)\") // added\n          .attr(\"y\", height/100)\n          .attr(\"x\", -height/30)\n          .attr(\"dy\", \".71em\")\n          .style(\"text-anchor\", \"end\")\n          .text(\"number of tweets\")\n          .style(\"fill\", \"#0F3A6F\")\n          .attr(\"transform\", \"rotate(-90)\");\n\n        var city = svg.selectAll(\".city\")\n          .data(cities)\n          .enter().append(\"g\")\n          .attr(\"class\", \"city\");\n\n        city.append(\"path\")\n          .attr(\"class\", \"line\")\n          .style(\"stroke-width\", height/250)\n          .attr(\"d\", function(d) {\n            return line(d.values);\n          })\n          .style(\"stroke\", function(d) {\n            return color(d.name);\n          });\n\n        city.append(\"text\")\n          .datum(function(d) {\n            return {\n              name: d.name,\n              value: d.values[d.values.length - 1]\n            };\n          })\n          .attr(\"transform\", function(d) {\n            return \"translate(\" + x(d.value.date) + \",\" + y(d.value.temperature) + \")\";\n          })\n          .attr(\"x\", 3)\n          .attr(\"dy\", \".35em\")\n          .attr(\"font-size\", height/40 + \"px\")\n          .text(function(d) {\n            return d.name;\n          });\n\n        var mouseG = svg.append(\"g\")\n          .attr(\"class\", \"mouse-over-effects\");\n\n        mouseG.append(\"path\") // this is the black vertical line to follow mouse\n          .attr(\"class\", \"mouse-line\")\n          .style(\"stroke\", \"black\")\n          .style(\"stroke-width\", \"1px\")\n          .style(\"opacity\", \"0\");\n\n        var lines = this.props.lines;\n\n        var mousePerLine = mouseG.selectAll('.mouse-per-line')\n          .data(cities)\n          .enter()\n          .append(\"g\")\n          .attr(\"class\", \"mouse-per-line\");\n\n        mousePerLine.append(\"circle\")\n          .attr(\"r\", height/65)\n          .style(\"stroke\", function(d) {\n            return color(d.name);\n          })\n          .style(\"fill\", \"none\")\n          .style(\"stroke-width\", height/350+\"px\")\n          .style(\"opacity\", \"0\");\n\n        mousePerLine.append(\"text\")\n          .attr(\"transform\", \"translate(10,3)\");\n\n        mouseG.append('svg:rect') // append a rect to catch mouse movements on canvas\n          .attr('width', width) // can't catch mouse events on a g element\n          .attr('height', height)\n          .attr('fill', 'none')\n          .attr('pointer-events', 'all')\n          .on('mouseout', function() { // on mouse out hide line, circles and text\n            d3.select(\".mouse-line\")\n              .style(\"opacity\", \"0\");\n            d3.selectAll(\".mouse-per-line circle\")\n              .style(\"opacity\", \"0\");\n            d3.selectAll(\".mouse-per-line text\")\n              .style(\"opacity\", \"0\");\n          })\n          .on('mouseover', function() { // on mouse in show line, circles and text\n            d3.select(\".mouse-line\")\n              .style(\"opacity\", \"1\");\n            d3.selectAll(\".mouse-per-line circle\")\n              .style(\"opacity\", \"1\");\n            d3.selectAll(\".mouse-per-line text\")\n              .style(\"opacity\", \"1\")\n              .attr(\"font-size\", height/35 + \"px\");\n          })\n          .on('mousemove', function() { // mouse moving over canvas\n            var mouse = d3.mouse(this);\n            d3.select(\".mouse-line\")\n              .attr(\"d\", function() {\n                var d = \"M\" + mouse[0] + \",\" + height;\n                d += \" \" + mouse[0] + \",\" + 0;\n                return d;\n              });\n\n            d3.selectAll(\".mouse-per-line\")\n              .attr(\"transform\", function(d, i) {\n                //console.log(width/mouse[0])\n                var xDate = x.invert(mouse[0]),\n                    bisect = d3.bisector(function(d) { return d.date; }).right;\n                    let idx = bisect(d.values, xDate);\n\n                var beginning = 0,\n                    end = lines[i].getTotalLength(),\n                    target = null;\n\n                let pos;\n                while (true){\n                  target = Math.floor((beginning + end) / 2);\n                  pos = lines[i].getPointAtLength(target);\n                  if ((target === end || target === beginning) && pos.x !== mouse[0]) {\n                      break;\n                  }\n                  if (pos.x > mouse[0])      end = target;\n                  else if (pos.x < mouse[0]) beginning = target;\n                  else break; //position found\n                }\n\n                d3.select(this).select('text')\n                  .text(y.invert(pos.y).toFixed(2));\n\n                return \"translate(\" + mouse[0] + \",\" + pos.y +\")\";\n              });\n          });\n    }\n\n\n    render() {\n        console.log(\"lines:\"+ this.props.lines);\n        console.log(\"width:\"+ this.props.width);\n        return (\n            <div className={\"Graph\"}>\n            <div id=\"svg\"><svg ref={node => this.node = node}></svg></div>\n            </div>\n        );\n    }\n}\n\nexport default Graph;\n","import React, { Component } from 'react';\nimport './css/Tweet.css';\n\n/**\n * Models a tweet element for the live feed.\n * Takes one prop\n * @author Olivia\n */\nclass Tweet extends Component {\n\tconstructor(props) {\n        super(props);\n        this.state = {\n            image: null\n        }\n    }\n\n    componentDidMount() {\n    \tif (this.props.image) {\n    \t\tthis.setState({image: this.props.image});\n    \t}\n    \telse {\n    \t\tthis.setState({image: \"https://abs.twimg.com/sticky/default_profile_images/default_profile_400x400.png\"});\n    \t}\n    }\n\n    render() {\n        return (\n            <div className=\"tweet\">\n                <img className=\"tweet-image\" src={this.state.image} alt=\"Tweet Author\"/>\n                <div className=\"tweet-author\">{this.props.author}</div>\n                <div className=\"tweet-text\">{this.props.text}</div>\n            </div>\n        );\n    }\n}\n\nexport default Tweet;","import React, { Component } from 'react';\nimport './css/TweetContainer.css';\nimport Tweet from \"./Tweet\";\n\n/**\n * Wrapper for the tweet\n * Expects one prop: tweets, which is a list of tweets with content and authors\n * @author Olivia\n */\nclass TweetContainer extends Component {\n    render() {\n        return (\n            <div className=\"tweet-feed\">\n            \t<div className=\"header\">Real-Time Statuses</div>\n            \t<div className=\"tweets\">\n\t            \t{this.props.tweets.map(ele => {\n\t                    return <Tweet image={ele.image} author={ele.author} text={ele.text}/>;\n\t                })}\n\t            </div>\n            </div>\n        );\n    }\n}\n\nexport default TweetContainer;","import React, { Component } from 'react';\nimport {socket} from \"./App\";\nimport \"./css/Login.css\";\nimport CryptoJs from 'crypto-js';\n\nclass Login extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n        error: \"\",\n        authorized: false,\n\n        }\n    }\n\n    login = (event) => {\n        console.log(\"here\");\n        event.preventDefault();\n\n        const username = event.target[0].value;\n        const password = CryptoJs.SHA256(event.target[1].value).toString();\n\n       socket.emit(\"authorize\", username, password, (res) => {\n           const response = JSON.parse(res);\n           console.log(response);\n           if (response.hasOwnProperty(\"error\")) {\n               this.setState({error: response.error});\n           } else {\n               this.setState({authorized: response.validated})\n               if (response.validated) {\n                   this.props.authorize(username);\n               }\n           }\n\n       })\n\n    };\n\n    render() {\n        return (\n            <div className=\"Login\">\n                <h1>Login</h1>\n                <form className={\"login-form\"} onSubmit={this.login}>\n                    {/*<button className={\"close-button\"} onClick={this.props.close}>X </button>*/}\n                    <input type={\"text\"} className={\"login-input\"} placeholder={\"Username\"} autoComplete={\"off\"} />\n                    <input type={\"password\"} className={\"login-input\"} placeholder={\"Password\"} />\n                    <input type={\"submit\"} value={\"Login\"}/>\n                </form>\n                <div className={\"error\"}>{this.state.error}</div>\n            </div>\n\n        );\n    }\n}\nexport default Login;","import React, { Component } from 'react';\nimport \"./css/Console.css\";\nimport {socket} from \"./App.js\";\n\n\nclass Console extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            displayHashtags: this.props.displaying,\n            trackHashtags: this.props.tracking,\n            editingTracking: false,\n            editingDisplay: false,\n            displayError: \"\"\n        }\n    }\n\n    removeFromTracking = (toRemove) => {\n\n        let hashtags = this.state.trackHashtags.filter(ele => (ele !== toRemove));\n        this.setState({trackHashtags: hashtags});\n\n    };\n\n    removeFromDisplay = (toRemove) => {\n\n        let hashtags = this.state.displayHashtags.filter(ele => (ele !== toRemove));\n        this.setState({displayHashtags: hashtags});\n\n    };\n\n    addToTracking = (ele) => {\n\n        let hashtags = this.state.trackHashtags;\n        hashtags.push(ele);\n        this.setState({trackHashtags: hashtags});\n\n    };\n\n    addToDisplay = (ele) => {\n        let hashtags = this.state.displayHashtags;\n        hashtags.push(ele);\n        this.setState({displayHashtags: hashtags});\n\n    };\n\n    toggleTracking = () => {\n        this.setState({editingTracking: !this.state.editingTracking});\n    };\n\n    toggleDisplay = () => {\n        this.setState({editingDisplay: !this.state.editingDisplay});\n\n    };\n\n    addSubmitTracking = (event)=> {\n        event.preventDefault();\n        this.addToTracking(event.target[0].value);\n        event.target.reset();\n\n    };\n\n\n    addSubmitDisplay = (event)=> {\n        event.preventDefault();\n\n        console.log(this.state.trackHashtags);\n        console.log(event.target[0].value in this.state.trackHashtags);\n        if (this.state.trackHashtags.includes(event.target[0].value)) {\n            this.setState({displayError: \"\"});\n            this.addToDisplay(event.target[0].value);\n\n\n        } else {\n            this.setState({displayError: \"Error: hashtag not currently being tracked\"});\n            return;\n\n        }\n        event.target.reset();\n\n    };\n\n\n    confirmDisplay = () => {\n        this.toggleDisplay();\n        console.log(\"confirm!!\" + this.state.displayHashtags);\n        socket.emit(\"setDisplayed\", this.state.displayHashtags);\n\n    };\n\n    confirmTracking = () => {\n        this.toggleTracking();\n        socket.emit(\"setTracked\", this.state.trackHashtags);\n\n    };\n\n\n    render() {\n        console.log(this.props);\n        return (\n            <div className=\"Console\">\n                <h1>Admin Console</h1>\n                <div className={\"back-button\"} onClick={this.props.close}>Back to dashboard</div>\n                <div className={\"current track\"}>\n                    <h3> Current Hashtags Being Tracked: </h3>\n                    {this.state.editingTracking ?\n                        <div>\n                            {this.state.trackHashtags.map(ele => {\n                                return <div className={\"hashtag-curr\"} ><button onClick={() => this.removeFromTracking(ele)}\n                                                                                className={\"remove-button\"}>X</button>  #{ele}\n                                </div>\n                            })}\n                            <form className={\"submit-form\"} onSubmit={this.addSubmitTracking}>\n\n                                <input id={\"tracking-input\"} type={\"text\"} placeholder={\"Add hashtags to track\"}/>\n                                <input type={\"submit\"} value={\"Add\"}/>\n                            </form>\n\n                            <button className={\"admin-button\"} onClick={this.confirmTracking}>Confirm</button>\n\n                        </div> :<div>\n                            {this.state.trackHashtags.map(ele => {\n                                return <div className={\"hashtag-curr\"} >#{ele}</div>\n                            })}\n                            <button className={\"admin-button\"} onClick={this.toggleTracking} id={\"edit-button\"}>Edit</button>\n                        </div>\n\n                            }\n\n                </div>\n\n                <div className={\"current display\"}>\n                    <h3>  Current Hashtags Being Displayed: </h3>\n                    {this.state.editingDisplay ?\n                        <div>\n                            {this.state.displayHashtags.map(ele => {\n                                return <div className={\"hashtag-curr\"} > <button onClick={() => this.removeFromDisplay(ele)}\n                                                                                 className={\"remove-button\"}>X</button> #{ele}\n                                    </div>\n                            })}\n                            <form onSubmit={this.addSubmitDisplay} className={\"submit-form\"}>\n                                <input id={\"display-input\"} type={\"text\"} placeholder={\"Add hashtags to track\"}/>\n                                <input type={\"submit\"} value={\"Add\"}/>\n                            </form>\n                            <div className={\"display-error\"}> {this.state.displayError} </div>\n                            <button className={\"admin-button\"}onClick={this.confirmDisplay}>Confirm</button>\n                        </div> :<div>\n                            {this.state.displayHashtags.map(ele => {\n                                return <div className={\"hashtag-curr\"} >#{ele}</div>\n                            })}\n                            <button className={\"admin-button\"} onClick={this.toggleDisplay} id={\"edit-button\"}>Edit</button>\n\n                        </div>\n\n                    }\n            </div>\n            </div>\n        );\n    }\n\n\n}\nexport default Console;","import React, { Component } from 'react';\nimport './css/App.css';\nimport HashtagContainer from \"./HashtagContainer\";\nimport Graph from \"./Graph\";\nimport TweetContainer from \"./TweetContainer\";\nimport io from 'socket.io-client';\nimport Login from './Login';\nimport Console from \"./Console\";\nimport ReactLoading from 'react-loading';\nimport logo from './img/cdllogo2.png';\n\n//to run locally\n// const socket = io.connect('http://localhost:8000');\n\nlet host = new URL(window.location.href);\nhost.port = 8000;//deployed\nconsole.log(host.toString());\nconst socket = io.connect(host.toString());\n\nclass App extends Component {\n  constructor(props) {\n      super(props);\n      this.offsetW = 0;\n      this.state = {\n          isLoading: true,\n          login: false,\n          authorized: false,\n          user: \"\",\n          console: false,\n          tweets: [],\n          data: \"\",\n          tracking: [],\n          displaying: [],\n          hashtags: {}\n      }\n  }\n\n  componentDidMount() {\n      setTimeout(() => this.setState({ isLoading: false }), 800);\n      //this.offsetW = document.getElementsByClassName('wrapper-left')[0].offsetWidth;\n      console.log(\"this.offsetW in App.js:\" + this.offsetW);\n      socket.on(\"updateHashtags\", (received) => {\n          const data = JSON.parse(received);\n          this.setState({tracking: data.tracked, displaying: data.displayed})\n          this.updateFeed(data.displayed);\n          this.updateGraph(data.displayed);\n          /*let hashtagMap = data.displayed.reduce(\n            (hashtags, selected) => ({\n              ...hashtags,\n              [selected]: true\n            }),\n            {}\n          )\n          this.setState({hashtags: hashtagMap});*/\n      });\n  }\n\n  updateFeed = (hashtags) => {\n      socket.emit('updateFeed', hashtags);\n      socket.on('tweetsForFeed', (tweetData) => {\n        let tweets = this.formatTweets(tweetData);\n        this.setState({tweets: tweets});\n      });\n  };\n\n  updateGraph = (hashtags) => {\n      socket.emit('displayData', hashtags);\n      socket.on('tweetsForGraph', (freqData) => {\n          let dataString = this.formatData(freqData);\n          this.setState({data: dataString});\n      });\n  };\n\n  toggleLogin = () => {\n      this.setState({login: !this.state.login});\n  };\n  authorize = (user) => {\n      this.setState({authorized: true, user: user});\n      this.toggleLogin();\n  };\n\n  toggleConsole = () => {\n      this.setState({console: !this.state.console});\n  };\n\n  myCallback = (hashtags) => {\n    console.log(\"hashtags from App.js line 129: \"+hashtags);\n    this.setState( {hashtags: hashtags} );\n  };\n\n  formatData = (data) => {\n    let hashtags = this.state.displaying;\n    let myData = [];\n    let row1 = [\"date\"];\n    for (let x in hashtags) {\n      row1.push(\"#\" + hashtags[x]);\n    }\n    myData.push(row1);\n    let intervalSet = new Set();\n    let count = 0;\n    for (let t in data) {\n      let dateString = this.parseDateString(data[t].date);\n      if (!(intervalSet.has(dateString))) {\n        intervalSet.add(dateString);\n        let rowToAdd = [dateString];\n        for (let i = 0; i < hashtags.length; i++) {\n          rowToAdd.push(0);\n        }\n        myData.push(rowToAdd);\n        count++;\n        let index = hashtags.indexOf(data[t].hashtag);\n        myData[count][index+1]++;\n      }\n      else {\n        let index = hashtags.indexOf(data[t].hashtag);\n        myData[count][index+1]++;\n      }\n    }\n    console.log(myData);\n    return this.dataToString(myData);\n  };\n\n  parseDateString = (tweetDate) => {\n    let dateObj = new Date(tweetDate);\n    let dateString = \"\";\n    let year = dateObj.getFullYear();\n    let month = (\"0\" + (dateObj.getMonth()+1)).slice(-2);\n    let date = dateObj.getDate();\n    let hour = (\"0\" + dateObj.getHours()).slice(-2);\n    let minutes = dateObj.getMinutes();\n    let minutesRounded = (\"0\" + this.roundMinutes(minutes)).slice(-2);\n    dateString += year + month + date + hour + minutesRounded;\n    return dateString;\n  };\n\n  roundMinutes = (minutes) => {\n    let roundedDate = Math.floor(minutes / 5) * 5;\n    return roundedDate;\n  };\n\n  dataToString = (data) => {\n    let dataString = \"\";\n    for (let i = 0; i < data.length; i++) {\n      dataString += data[i].join(\"\\t\") + \"\\n\";\n    }\n    return dataString;\n  };\n\n  formatTweets = (data) => {\n    let tweetList = [];\n    for (let t in data) {\n      let tweetObj = {};\n      tweetObj[\"image\"] = data[t].picture;\n      tweetObj[\"author\"] = data[t].author;\n      tweetObj[\"text\"] = data[t].contents;\n      tweetList.push(tweetObj);\n    }\n    return tweetList;\n  };\n\n  render() {\n    if((!this.state.data) || this.state.isLoading) {\n      return <ReactLoading className={\"loading-icon\"} type={'spinningBubbles'} color={'white'} height='20%' width='20%'/>; // render the loading component\n    }\n    return (\n      <div className=\"App\">\n          {this.state.console ? <Console close={this.toggleConsole} tracking={this.state.tracking} displaying={this.state.displaying}/>: <div className={\"App\"}> {this.state.login ? <Login authorize={this.authorize} close={this.toggleLogin}/>: null}\n              <div className={\"login-link\"}>{this.state.authorized ? <span onClick={this.toggleConsole}> Welcome, {this.state.user} </span> : <span onClick={this.toggleLogin}>Admin</span>}</div>\n              <div className=\"wrapper-left\">\n                  <div className=\"title-block\">\n                      <div className=\"title-text\">Climate #Hashtag Tracker</div>\n                  </div>\n                  <Graph freq={this.state.data} width={this.offsetW} height={500} lines={document.getElementsByClassName('line')} svg={document.getElementById('svg')} hashtags={this.state.hashtags}/>\n                  <HashtagContainer hashtags={this.state.displaying} callbackFromParent={this.myCallback}/>\n              </div>\n              <div className=\"wrapper-right\">\n                  <div className=\"branding-wrapper\">\n                    <div className=\"logo\"><img className=\"logo-img\" src={logo}></img></div>\n                    <div className=\"branding-block\">\n                        <div className=\"school\">Brown University</div>\n                        <div className=\"lab\">Climate Development Lab</div>\n                    </div>\n                  </div>\n                  <TweetContainer tweets={this.state.tweets}/>\n              </div>\n          </div>}\n\n\n      </div>\n    );\n  }\n}\nexport default App;\nexport {socket};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/cdllogo2.97d399a8.png\";"],"sourceRoot":""}